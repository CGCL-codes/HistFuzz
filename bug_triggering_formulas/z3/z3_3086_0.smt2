(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((v3 (* 36 x4))(v0 (* 37 x7))(v21 (* 3 x1))(v2 (* 23 x0))(v4 (* 37 x1))(v23 (* 15 x8))(v11 (* 24 x1))(v19 (* 28 x5))(v5 (* 26 x5))(v12 (* 13 x5))(v1 (* (- 38) x0))(v18 (* (- 33) x4))(v22 (* (- 38) x1))(v16 (* (- 24) x6))(v6 (* (- 13) x1))(v9 (* (- 8) x4))(v13 (* (- 11) x9))(v10 (* (- 6) x0))(v15 (* (- 37) x7))) (and (<= (+ v3 (* (- 25) x7) (* 7 x6) (/ 22 x8)) (- 4)) (<= (+ (* 16 x1) x1 (* 8 x0) v0) 0) (<= (+ (* 14 x3) (* 25 x8) (* 27 x4) (* (- 8) x3) (* (- 17) x4) v1) (- 25) 6) (<= (+ (* 9 x3) (* (- 36) x4) (* (- 32) x8) (* (- 16) x1) v0 v2 x5 (* (- 31) x6)) (- 15)) (<= (/ 0 (* (- 7) x6) v4 (* 20 x2) v1 0 0 0) 0) (<= (+ (* 34 x5) (* 10 x6) (+ (- 3) x5) (* (- 38) x9) v22 (* 19 x6) v16) 35) (<= (+ (* (- 39) x9) v23 v11 (* (- 23) x4) (- 30) (* 11 x2) (- x5)) 0) (<= (+ (* 30 x9) (* 14 x2) v6 (* (- 16) x8) (* 29 x1) (* (- 3) x6) v9 (* (- 10) x8) v19) (- 39)) (<= (+ (* 38 x2) (* 23 x3) (* 12 x2) v10 v3 (* 29 x6) v5 v15 (* (+ 106 10) x9)) 16) (<= (+ (* 31 x4) (* (- 26) x0) (* (- 19) x9) (* (- 21) x4) v4 v5 v12 (* (- 20) x4) (* (- 31) x2)) (- 12)) (<= (+ (* 38 (- 28) x1) (* 29 x0) (* 5 x1) v6 (* 22 x7)) 10) (<= (+ x1 (* 16 x3) (* (- 38) x5) v10 (* (- 7) x4)) 0) (<= (+ (* x3) x6 v11 (* 25 x1) (* (- 3) x9) (* 19 x9)) (- 37)) (<= (+ v12 (* x4) (- 30) (* (- 31) x0) 0 v15) (- 33)) (<= (/ 0 v16 (* 26 x6) 0 v18 (* (- 32) x5) (+ 34 x8) (* 19) v1) 0) (<= (+ v12 (* (- 37) x3) v19 (* (- 18) x4) x9) (- 9)) (<= (+ (* (- 30) x6) v21 (* 9 x8) v13 (* (- 28) x5) (* (- 14) x3) v22 (* 5 x8) v23) 35))))
(check-sat)
