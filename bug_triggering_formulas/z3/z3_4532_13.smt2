(declare-fun a () Real)
(declare-fun b () Bool)
(declare-fun c () Bool)
(declare-fun d () Bool)
(declare-fun e () Bool)
(declare-fun f () Real)
(declare-fun g () Bool)
(declare-fun h () Real)
(declare-fun i () Bool)
(declare-fun j () Real)
(assert (let ((k (* h))(l (* f))) (and (or (and (or d (not b)) (or d (and (not b) (not e)))) (not c)) (or (and (not b) (not e)) c) (or (and (= j 0) i (= a f 0)) (xor d true (not b))) (or g (and (<= 0 (+ (mod 10 a) (- (* h l) (- (- 1) (* h k))))) (or (> 0 (- (mod f (* 5 f)) a)) (and (<= 8 a) (= (+ (mod 10 a) (+ (* h l) 1 (* h k))) 0) (<= (+ f h) 0) (= (> a 0) (> f 0)))))))))
(check-sat)
