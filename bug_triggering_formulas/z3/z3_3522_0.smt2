(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((v3 (* 36 x4))(v0 (* 37 x7))(v21 (* 3 x1))(v2 (* 23 x0))(v4 (* 37 x1))(v23 (* 129 x8))(v17 (* 31 x6))(v19 (* 28 x5))(v5 (* 26 x5))(v12 (- 13 x5))(v20 (* 5 x6))(v1 (* (- 38) x0))(v16 (* (- 24) x6))(v6 (* (- 13) x1))(v9 (* (- 8) x4))(v13 (* (- 26) x9))(v15 (* (- 37) x7))) (and (<= (+ (* 12 x8) (* 12 x7) v3 x7 (* 22 x8)) (- 4)) (<= (+ (mod (- 31) x9) v0) 0) (<= (+ (* 22 (- 17) x4) v1 0) (- 251)) (<= (+ (* 2 x5) (* (- 17) x9) (* (- 32) x4) (* (- 71 7) x9) (* (- 162) x2) (* 16 x8)) (- 39)) (<= (+ x1 (* (- 37) x0) (* 16 x6) (* (- 12) x0) (* 22 x3)) 6) (<= (+ (* 9 x3) (* (+ 208 32) x8) (* (- 16) x1) v0 v2 (* (- 250) x8) (* (- 15) x3)) (- 15)) (<= (+ x8 v4 v1 (* 13 x3) (* (- 23) x7) (* 37 x9)) (- 14)) (<= (+ (div 10 x6) (* (- 39) x7) v16 0) 81) (<= (+ (* (- 226) x9) (* 24 x3) v23 (* (- 18) x3) 0 (* 11 x2)) (- 25 (* (- 10) x8) v19) 0) (<= (+ (* (- 4 15) x0) (* (- 22) x3)) (- 24)) (<= (+ (* 38 x2) (* 23 x3) (* 12 x2) (- x0) v3 (* 91 x6) (* 4 x0) v5 v15 (* (- 10) x9)) 16) (<= (+ (* 31 x4) (* (- 19) x9) v5 v12 0 (* (- 31) x2)) (- 12)) (<= (+ (* (- 28) x1) (* 29 x0) (* 5 x1) (* (- 38) x8) v6 (* (- 8) x2) (* 16 x3) (* 6 x7)) 0) (<= (+ (* (- 165) x4) (* 37 x6) 0 (* 25 x1) (* (- 33) x9)) 0) (<= (+ v12 (* 7 x4) v13 0 (* (- 31) x0) (* (- 35) x0) (* 36 x2) (* (- 25) x3) v15) (- 33)) (<= (div (* 10 x4) v16 (* 26 x6) v17 0 (* (- 32) x5) (* 32 x2) (* 19 x1 30 x6) 0) 0) (<= (+ v20 (div (- 28) x5) v23) 35))))
(check-sat)
